"use client"
import React, { useEffect, useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Textarea } from '@/components/ui/textarea';
import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group';
import styles from '../../styles/wedding.module.css';
import Countdown from '@/components/Countdown';
import LocationMap from '@/components/LocationMap';
import Calendar from '@/components/Calendar';

const Wedding: React.FC = () => {
  const [visibleSections, setVisibleSections] = useState<Set<string>>(new Set());
  const [guestForm, setGuestForm] = useState({
    name: '',
    email: '',
    phone: '',
    attendance: '',
    guests: '1',
    dietary: '',
    message: ''
  });

  useEffect(() => {
    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        const id = (entry.target as HTMLElement).id;
        if (entry.isIntersecting) {
          setVisibleSections(prev => new Set(prev).add(id));
        } else {
          setVisibleSections(prev => {
            const newSet = new Set(prev);
            newSet.delete(id);
            return newSet;
          });
        }
      });
    }, { threshold: 0.05 });

    const sections = document.querySelectorAll('[data-animate]');
    sections.forEach((s) => observer.observe(s));

    return () => observer.disconnect();
  }, []);

  const handleInputChange = (field: string, value: string) => {
    setGuestForm(prev => ({ ...prev, [field]: value }));
  };

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    localStorage.setItem('weddingGuestResponse', JSON.stringify(guestForm));
    alert('–î—è–∫—É—î–º–æ –∑–∞ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è! –í–∞—à–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –∑–±–µ—Ä–µ–∂–µ–Ω–∞.');
  };

  const renderAnimatedText = (text: string, delay: number = 50) => {
    const parts = text.split('<br/>');
    let wordCount = 0;

    return parts.map((part, partIndex) => (
      <React.Fragment key={partIndex}>
        {part.match(/(\S+)|(\s+)/g)?.map((chunk, index) => {
          if (chunk.trim() === '') {
            return <React.Fragment key={index}>{chunk}</React.Fragment>;
          } else {
            const currentWordIndex = wordCount;
            wordCount++;
            return (
              <span key={index} style={{ transitionDelay: `${currentWordIndex * delay}ms` }}>
                {chunk}
              </span>
            );
          }
        })}
        {partIndex < parts.length - 1 && <br />}
      </React.Fragment>
    ));
  };

  return (
    <div className={styles.weddingContainer}>
    <div className={styles.weddingContainerLiner}></div>
      <div className={styles.ukrainianBg}></div>

      {/* Couple Info */}
      <section 
        id="couple-info" 
        data-animate
        className={`${styles.section} ${visibleSections.has('couple-info') ? styles.visible : ''}`}
      >
        <Card className={styles.infoCard}>
          <CardHeader>
            <CardTitle className={styles.sectionTitle}>{renderAnimatedText("–î–æ—Ä–æ–≥—ñ –Ω–∞—à—ñ!")}</CardTitle>
          </CardHeader>
          <CardContent>
            <div className={styles.sectionContent}>            
              <p className={styles.loveStory}>
                {renderAnimatedText("–£ –∂–∏—Ç—Ç—ñ —Ç—Ä–∞–ø–ª—è—é—Ç—å—Å—è –º–æ–º–µ–Ω—Ç–∏, —è–∫—ñ —Ö–æ—á–µ—Ç—å—Å—è —Ä–æ–∑–¥—ñ–ª–∏—Ç–∏ –∑ —Ç–∏–º–∏ —Ö—Ç–æ –ø–æ —Å–ø—Ä–∞–≤–∂–Ω—å–æ–º—É –≤–∞–∂–ª–∏–≤–∏–π. –î–ª—è –Ω–∞—Å —Ç–∞–∫–∏–º –º–æ–º–µ–Ω—Ç–æ–º —Å—Ç–∞–Ω–µ –¥–µ–Ω—å –∫–æ–ª–∏ –º–∏ —Å—Ç–∞–Ω–µ–º–æ —á–æ–ª–æ–≤—ñ–∫–æ–º —Ç–∞ –¥—Ä—É–∂–∏–Ω–æ—é, –∑–∞–ø—Ä–æ—à—É—î–º–æ –í–∞—Å —Å—Ç–∞—Ç–∏ —á–∞—Å—Ç–∏–Ω–æ—é –ø–æ—á–∞—Ç–∫—É –Ω–∞—à–æ—ó —Å—ñ–º–µ–π–Ω–æ—ó —ñ—Å—Ç–æ—Ä—ñ—ó.")}
              </p>
            </div>
          </CardContent>
          <div style={{ marginTop: 12, display: 'flex', justifyContent: 'center' }}>
              <Calendar year={2025} month={11} highlightedDay={1} isVisible={visibleSections.has('couple-info')} />
            </div>
            <div>
      <p className={styles.weddingDate}>{renderAnimatedText("–î–æ –≤–µ—Å—ñ–ª–ª—è –∑–∞–ª–∏—à–∏–ª–æ—Å—è")}</p>
            <Countdown targetDate={'2025-11-01T00:00:00'} />
      </div>
        </Card>
      </section>

      <section 
        id="place" 
        data-animate
        className={`${styles.section} ${styles.place} ${visibleSections.has('place') ? styles.visible : ''}`}
      >
        <Card className={styles.infoCard}>
          <CardHeader>
            <div className={styles.sectionContent}>
              <CardTitle className={styles.sectionTitle}>{renderAnimatedText("üèõÔ∏è –ú—ñ—Å—Ü–µ –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—è")}</CardTitle>
              <div className={styles.detailItem}>
                    <h4>{renderAnimatedText("–ì–æ—Ç–µ–ª—å–Ω–æ-—Ä–µ—Å—Ç–æ—Ä–∞–Ω–Ω–∏–π –∫–æ–º–ø–ª–µ–∫—Å \"VinoGrad\"")}</h4>
                    <p>{renderAnimatedText("–ú—ñ—Å—Ç–æ –ì–∞–π—Å–∏–Ω<br/>–ø—Ä–æ—Å–ø–µ–∫—Ç –ñ–∏—Ç–Ω—ñ–π, 1")}</p>
                  </div>
            </div>
          </CardHeader>
          <CardContent>
            <div className={`${styles.sectionContent} ${styles.mapSection}`}>            
              <LocationMap address={`48.80427465487786, 29.41383327459868`} label={`–ú—ñ—Å—Ü–µ —Å–≤—è—Ç–∫—É–≤–∞–Ω–Ω—è: –º.–ì–∞–π—Å–∏–Ω`} />
            </div>
          </CardContent>        
        </Card>
      </section>

      {/* Wedding Details */}
      <section 
        id="schedule" 
        data-animate
        className={`${styles.section} ${visibleSections.has('schedule') ? styles.visible : ''}`}
      >
        <Card className={styles.infoCard}>
          <CardHeader>
            <CardTitle className={styles.sectionTitle}>{renderAnimatedText("–ü—Ä–æ–≥—Ä–∞–º–∞ –¥–Ω—è")}</CardTitle>
          </CardHeader>
          <CardContent>
            <div className={`${styles.sectionContent} ${styles.weddingDetails}`}>
              <div>
                <img src="/zbir.jpg" alt="–ó–±—ñ—Ä –≥–æ—Å—Ç–µ–π" className={styles.weddingDetailsImg} />
                <div className={styles.detailItem}>
                  <h4>{renderAnimatedText("13:00")}</h4>
                  <p>{renderAnimatedText("–ó–±—ñ—Ä –≥–æ—Å—Ç–µ–π")}</p>
                </div>
              </div>
              <div>
                <img src="/zbir.jpg" alt="–ó–±—ñ—Ä –≥–æ—Å—Ç–µ–π" className={styles.weddingDetailsImg} />
                <div className={styles.detailItem}>
                  <h4>{renderAnimatedText("14:00")}</h4>
                  <p>{renderAnimatedText("–¶–µ—Ä–µ–º–æ–Ω—ñ—è")}</p>
                </div>
              </div>
              <div>
                <img src="/zbir.jpg" alt="–ó–±—ñ—Ä –≥–æ—Å—Ç–µ–π" className={styles.weddingDetailsImg} />
                <div className={styles.detailItem}>
                  <h4>{renderAnimatedText("15:00")}</h4>
                  <p>{renderAnimatedText("–ë–∞–Ω–∫–µ—Ç")}</p>
                </div>
              </div>
            </div>
          </CardContent>
        </Card>
      </section>

      <section 
        id="dresscode" 
        data-animate
        className={`${styles.section} ${styles.dresscode} ${visibleSections.has('dresscode') ? styles.visible : ''}`}
      >
        <Card className={`${styles.infoCard} ${styles.dresscodeCard}`}>
          <CardHeader>
            <CardTitle className={styles.sectionTitle}>{renderAnimatedText("–î—Ä–µ—Å–∫–æ–¥")}</CardTitle>
          </CardHeader>
          <CardContent>
            <div className={styles.sectionContent}>
              <div className={styles.weddingDetails}>
                <div className={styles.detailItem}>                  
                  <p>
                    {renderAnimatedText("–ù–∞–º –±—É–¥–µ –ø—Ä–∏—î–º–Ω–æ, —è–∫—â–æ –í–∏ –ø—ñ–¥—Ç—Ä–∏–º–∞—î—Ç–µ –µ—Ç–Ω—ñ—á–Ω—É –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –Ω–∞—à–æ–≥–æ —Å–≤—è—Ç–∞ —Ç–∞ –æ–¥—è–≥–Ω–µ—Ç–µ –≤–∏—à–∏—Ç–µ –≤–±—Ä–∞–Ω–Ω—è. <br/> –ó–±–µ—Ä–µ–∂–µ–º–æ –Ω–∞—à—ñ —Ç—Ä–∞–¥–∏—Ü—ñ—ó —Ä–∞–∑–æ–º! ")}
                  </p>
                </div>
              </div>
            </div>
          </CardContent>
        </Card>
      </section>

      <section  id="desire" 
        data-animate
        className={`${styles.section} ${styles.desire} ${visibleSections.has('desire') ? styles.visible : ''}`}>
                <CardContent>
                <div className={styles.detailItem}>
                  <h4>{renderAnimatedText("–ü–æ–±–∞–∂–∞–Ω–Ω—è")}</h4>
                  <p>
                    {renderAnimatedText("–ü—Ä–æ—Å–∏–º–æ –í–∞—Å –Ω–µ –¥–∞—Ä—É–≤–∞—Ç–∏ –Ω–∞–º –∫–≤—ñ—Ç–∏, –∞–¥–∂–µ –º–∏ –Ω–µ –≤—Å—Ç–∏–≥–Ω–µ–º–æ –Ω–∞—Å–æ–ª–æ–¥–∏—Ç–∏—Å—è —ó—Ö–Ω—å–æ—é –∫—Ä–∞—Å–æ—é, –∞–ª–µ –≤–∏ –º–æ–∂–µ—Ç–µ –¥–æ–ø–æ–≤–Ω–∏—Ç–∏ –ø–ª—è—à–µ—á–∫–æ—é –º—ñ—Ü–Ω–æ–≥–æ –∞–ª–∫–æ–≥–æ–ª—é, –Ω–∞—à—É –¥–æ–º–∞—à–Ω—å–æ—ó –∫–æ–ª–µ–∫—Ü—ñ—ó!")}
                  </p>
                  <p>
                    {renderAnimatedText("–ú–∏ –¥—É–∂–µ —Ü—ñ–Ω—É—î–º–æ –≤–∞—à—É —Ç—É—Ä–±–æ—Ç—É —Ç–∞ —É–≤–∞–≥—É, —â–æ–± –Ω–∞—à—ñ —Ä—É–∫–∏ –±—É–ª–∏ –≤—ñ–ª—å–Ω—ñ –¥–ª—è –æ–±—ñ–π–º—ñ–≤, <br/>–±—É–¥–µ–º–æ —Ä–∞–¥—ñ –ª–µ–≥–∫–∏–º –ø–æ–¥–∞—Ä—É–Ω–∫–∞–º —É –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ö")}
                  </p>
                </div></CardContent></section>

      {/* Guest Form */}
      <section 
        id="rsvp" 
        data-animate
        className={`${styles.section} ${visibleSections.has('rsvp') ? styles.visible : ''}`}
      >
        <Card className={styles.formCard}>
          <CardHeader>
            <CardTitle className={styles.sectionTitle}>{renderAnimatedText("–ë—É–¥—å –ª–∞—Å–∫–∞, –ø—ñ–¥—Ç–≤–µ—Ä–¥—ñ—Ç—å –≤–∞—à—É –ø—Ä–∏—Å—É—Ç–Ω—ñ—Å—Ç—å –¥–æ 15.10.2025—Ä")}</CardTitle>
          </CardHeader>
          <CardContent>
            <div className={styles.sectionContent}>
              <form onSubmit={handleSubmit} className={styles.guestForm}>
                <div className={styles.formGroup}>
                  <Label htmlFor="name">{renderAnimatedText("–ü—Ä—ñ–∑–≤–∏—â–µ —Ç–∞ —ñ–º'—è *")}</Label>
                  <Input
                    id="name"
                    value={guestForm.name}
                    onChange={(e) => handleInputChange('name', e.target.value)}
                    required
                  />
                </div>            

                <div className={styles.formGroup}>
                  <Label>{renderAnimatedText("–ß–∏ –º–æ–∂–µ—Ç–µ –≤–∏ –±—É—Ç–∏ –ø—Ä–∏—Å—É—Ç–Ω—ñ? *")}</Label>
                  <RadioGroup
                    value={guestForm.attendance}
                    onValueChange={(value) => handleInputChange('attendance', value)}
                  >
                    <div className={styles.radioItem}>
                      <RadioGroupItem value="yes" id="yes" />
                      <Label htmlFor="yes">{renderAnimatedText("—è –±—É–¥—É –ø—Ä–∏—Å—É—Ç–Ω—ñ–π")}</Label>
                    </div>
                    <div className={styles.radioItem}>
                      <RadioGroupItem value="no" id="no" />
                      <Label htmlFor="no">{renderAnimatedText("—è –Ω–µ –∑–º–æ–∂–µ–º–æ –±—É—Ç–∏ –ø—Ä–∏—Å—É—Ç–Ω—ñ–º")}</Label>
                    </div>
                  </RadioGroup>
                </div>

                {guestForm.attendance === 'yes' && (
                  <>
                    <div className={styles.formGroup}>
                      <Label htmlFor="guests">{renderAnimatedText("–ö—ñ–ª—å–∫—ñ—Å—Ç—å –≥–æ—Å—Ç–µ–π")}</Label>
                      <Input
                        id="guests"
                        type="number"
                        min="1"
                        max="5"
                        value={guestForm.guests}
                        onChange={(e) => handleInputChange('guests', e.target.value)}
                      />
                    </div>

                   <div className={styles.formGroup}>
                  <Label>{renderAnimatedText("–ó —á–∏—î—ó –≤–∏ —Å—Ç–æ—Ä–æ–Ω–∏?")}</Label>
                  <RadioGroup
                    value={guestForm.attendance}
                    onValueChange={(value) => handleInputChange('attendance', value)}
                  >
                    <div className={styles.radioItem}>
                      <RadioGroupItem value="yes" id="yes" />
                      <Label htmlFor="yes">{renderAnimatedText("—Å—Ç–æ—Ä–æ–Ω–∞ –Ω–∞—Ä–µ—á–µ–Ω–æ–≥–æ")}</Label>
                    </div>
                    <div className={styles.radioItem}>
                      <RadioGroupItem value="no" id="no" />
                      <Label htmlFor="no">{renderAnimatedText("—Å—Ç–æ—Ä–æ–Ω–∞ –Ω–∞—Ä–µ—á–µ–Ω–æ—ó")}</Label>
                    </div>
                  </RadioGroup>
                </div>
                  </>
                )}

                <Button type="submit" className={styles.submitButton}>
                  {renderAnimatedText("–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –ø—Ä–∏—Å—É—Ç–Ω—ñ—Å—Ç—å")}
                </Button>
              </form>
            </div>
            <div className={styles.formGroup}>
                  <p >{renderAnimatedText("* –ü—Ä–æ—Ö–∞–Ω–Ω—è –Ω–µ –ø–µ—Ä–µ—Å–∏–ª–∞—Ç–∏ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –¥—Ä—É–∑—è–º —Ç–∞ –∑–Ω–∞–π–æ–º–∏–º, —Ü–µ –ª–∏—à–µ —ñ–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–æ –¥–ª—è –í–∞—Å.")}</p>
                </div>
          </CardContent>
        <div className={styles.detailItem}>
          <p>{renderAnimatedText("–ó –Ω–µ—Ç–µ—Ä–ø—ñ–Ω–Ω—è–º —á–µ–∫–∞—î–º–æ –í–∞—Å! <br/> –í–∞—à—ñ –û–ª—è —Ç–∞ –ö–æ–ª—è üíï")}</p>
          <div className={styles.ornament}>üåª üíô üíõ üåª</div>
        </div>
        </Card>
      </section>

    </div>
  );
};

export default Wedding;
