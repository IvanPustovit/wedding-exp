"use client"
import React, { useEffect, useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Textarea } from '@/components/ui/textarea';
import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group';
import styles from '../../styles/wedding.module.css';

const Wedding: React.FC = () => {
  const [visibleSections, setVisibleSections] = useState<Set<string>>(new Set());
  const [guestForm, setGuestForm] = useState({
    name: '',
    email: '',
    phone: '',
    attendance: '',
    guests: '1',
    dietary: '',
    message: ''
  });

  useEffect(() => {
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            setVisibleSections(prev => new Set(prev).add(entry.target.id));
          }
        });
      },
      { threshold: 0.1 }
    );

    const sections = document.querySelectorAll('[data-animate]');
    sections.forEach((section) => observer.observe(section));

    return () => observer.disconnect();
  }, []);

  const handleInputChange = (field: string, value: string) => {
    setGuestForm(prev => ({ ...prev, [field]: value }));
  };

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    // Store in localStorage (MongoDB integration for future)
    localStorage.setItem('weddingGuestResponse', JSON.stringify(guestForm));
    alert('–î—è–∫—É—î–º–æ –∑–∞ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è! –í–∞—à–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –∑–±–µ—Ä–µ–∂–µ–Ω–∞.');
  };

  return (
    <div className={styles.weddingContainer}>
      <div className={styles.ukrainianBg}></div>
      
      {/* Hero Section */}
      <section 
        id="hero" 
        data-animate
        className={`${styles.heroSection} ${visibleSections.has('hero') ? styles.visible : ''}`}
      >
        <div className={styles.heroContent}>
          <h1 className={styles.coupleTitle}>–û–ª–µ–∫—Å–∞–Ω–¥—Ä & –ú–∞—Ä—ñ—è</h1>
          <p className={styles.weddingDate}>25 —Ç—Ä–∞–≤–Ω—è 2024</p>
          <div className={styles.ornamentLarge}>üåª üíô üíõ üåª</div>
        </div>
      </section>

      {/* Couple Info */}
      <section 
        id="couple" 
        data-animate
        className={`${styles.section} ${visibleSections.has('couple') ? styles.visible : ''}`}
      >
        <Card className={styles.infoCard}>
          <CardHeader>
            <CardTitle className={styles.sectionTitle}>–ù–∞—à–∞ —ñ—Å—Ç–æ—Ä—ñ—è</CardTitle>
          </CardHeader>
          <CardContent>
            <div className={styles.coupleInfo}>
              <div className={styles.brideGroom}>
                <h3>–û–ª–µ–∫—Å–∞–Ω–¥—Ä</h3>
                <p>–°–∏–Ω –Ü–≤–∞–Ω–∞ —Ç–∞ –û–ª—å–≥–∏ –ü–µ—Ç—Ä–µ–Ω–∫—ñ–≤</p>
                <p>–ù–∞—Ä–æ–¥–∏–≤—Å—è –≤ –ö–∏—î–≤—ñ, –ª—é–±–∏—Ç—å –ø–æ–¥–æ—Ä–æ–∂—ñ —Ç–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—é</p>
              </div>
              <div className={styles.heart}>üíï</div>
              <div className={styles.brideGroom}>
                <h3>–ú–∞—Ä—ñ—è</h3>
                <p>–î–æ–Ω—å–∫–∞ –ü–µ—Ç—Ä–∞ —Ç–∞ –ù–∞—Ç–∞–ª—ñ—ó –Ü–≤–∞–Ω–µ–Ω–∫—ñ–≤</p>
                <p>–ù–∞—Ä–æ–¥–∏–ª–∞—Å—è –≤ –õ—å–≤–æ–≤—ñ, –∑–∞—Ö–æ–ø–ª—é—î—Ç—å—Å—è –º—É–∑–∏–∫–æ—é —Ç–∞ –∂–∏–≤–æ–ø–∏—Å–æ–º</p>
              </div>
            </div>
            <p className={styles.loveStory}>
              –ú–∏ –∑—É—Å—Ç—Ä—ñ–ª–∏—Å—è 3 —Ä–æ–∫–∏ —Ç–æ–º—É –Ω–∞ —Ñ–µ—Å—Ç–∏–≤–∞–ª—ñ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—ó –∫—É–ª—å—Ç—É—Ä–∏. 
              –ù–∞—à–∞ –ª—é–±–æ–≤ —Ä–æ–∑–∫–≤—ñ—Ç–ª–∞ —è–∫ –≤–µ—Å–Ω—è–Ω—ñ –∫–≤—ñ—Ç–∏, —ñ —Ç–µ–ø–µ—Ä –º–∏ –≥–æ—Ç–æ–≤—ñ –ø–æ—á–∞—Ç–∏ 
              –Ω–æ–≤–µ –∂–∏—Ç—Ç—è —Ä–∞–∑–æ–º —è–∫ –æ–¥–Ω–∞ —Ä–æ–¥–∏–Ω–∞.
            </p>
          </CardContent>
        </Card>
      </section>

      {/* Wedding Details */}
      <section 
        id="details" 
        data-animate
        className={`${styles.section} ${visibleSections.has('details') ? styles.visible : ''}`}
      >
        <Card className={styles.infoCard}>
          <CardHeader>
            <CardTitle className={styles.sectionTitle}>–î–µ—Ç–∞–ª—ñ –≤–µ—Å—ñ–ª–ª—è</CardTitle>
          </CardHeader>
          <CardContent>
            <div className={styles.weddingDetails}>
              <div className={styles.detailItem}>
                <h4>üìÖ –î–∞—Ç–∞</h4>
                <p>–°—É–±–æ—Ç–∞, 25 —Ç—Ä–∞–≤–Ω—è 2024 —Ä–æ–∫—É</p>
              </div>
              <div className={styles.detailItem}>
                <h4>‚è∞ –ß–∞—Å</h4>
                <p>–¶–µ—Ä–µ–º–æ–Ω—ñ—è: 14:00<br />–ë–∞–Ω–∫–µ—Ç: 16:00</p>
              </div>
              <div className={styles.detailItem}>
                <h4>üèõÔ∏è –ú—ñ—Å—Ü–µ —Ü–µ—Ä–µ–º–æ–Ω—ñ—ó</h4>
                <p>–°–≤—è—Ç–æ-–ú–∏—Ö–∞–π–ª—ñ–≤—Å—å–∫–∏–π —Å–æ–±–æ—Ä<br />–≤—É–ª. –ú–∏—Ö–∞–π–ª—ñ–≤—Å—å–∫–∞, 7, –ö–∏—ó–≤</p>
              </div>
              <div className={styles.detailItem}>
                <h4>üéâ –ú—ñ—Å—Ü–µ –±–∞–Ω–∫–µ—Ç—É</h4>
                <p>–†–µ—Å—Ç–æ—Ä–∞–Ω "–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ —Å–∞–¥–∏–±–∞"<br />–≤—É–ª. –•—Ä–µ—â–∞—Ç–∏–∫, 15, –ö–∏—ó–≤</p>
              </div>
            </div>
          </CardContent>
        </Card>
      </section>

      {/* Guest Form */}
      <section 
        id="rsvp" 
        data-animate
        className={`${styles.section} ${visibleSections.has('rsvp') ? styles.visible : ''}`}
      >
        <Card className={styles.formCard}>
          <CardHeader>
            <CardTitle className={styles.sectionTitle}>–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –ø—Ä–∏—Å—É—Ç–Ω–æ—Å—Ç—ñ</CardTitle>
          </CardHeader>
          <CardContent>
            <form onSubmit={handleSubmit} className={styles.guestForm}>
              <div className={styles.formGroup}>
                <Label htmlFor="name">–ü–æ–≤–Ω–µ —ñ–º'—è *</Label>
                <Input
                  id="name"
                  value={guestForm.name}
                  onChange={(e) => handleInputChange('name', e.target.value)}
                  required
                />
              </div>

              <div className={styles.formRow}>
                <div className={styles.formGroup}>
                  <Label htmlFor="email">Email</Label>
                  <Input
                    id="email"
                    type="email"
                    value={guestForm.email}
                    onChange={(e) => handleInputChange('email', e.target.value)}
                  />
                </div>
                <div className={styles.formGroup}>
                  <Label htmlFor="phone">–¢–µ–ª–µ—Ñ–æ–Ω</Label>
                  <Input
                    id="phone"
                    value={guestForm.phone}
                    onChange={(e) => handleInputChange('phone', e.target.value)}
                  />
                </div>
              </div>

              <div className={styles.formGroup}>
                <Label>–ß–∏ –±—É–¥–µ—Ç–µ –ø—Ä–∏—Å—É—Ç–Ω—ñ? *</Label>
                <RadioGroup
                  value={guestForm.attendance}
                  onValueChange={(value) => handleInputChange('attendance', value)}
                >
                  <div className={styles.radioItem}>
                    <RadioGroupItem value="yes" id="yes" />
                    <Label htmlFor="yes">–¢–∞–∫, –æ–±–æ–≤'—è–∑–∫–æ–≤–æ –±—É–¥–µ–º–æ!</Label>
                  </div>
                  <div className={styles.radioItem}>
                    <RadioGroupItem value="no" id="no" />
                    <Label htmlFor="no">–ù–∞ –∂–∞–ª—å, –Ω–µ –∑–º–æ–∂–µ–º–æ –ø—Ä–∏–π—Ç–∏</Label>
                  </div>
                </RadioGroup>
              </div>

              {guestForm.attendance === 'yes' && (
                <>
                  <div className={styles.formGroup}>
                    <Label htmlFor="guests">–ö—ñ–ª—å–∫—ñ—Å—Ç—å –≥–æ—Å—Ç–µ–π</Label>
                    <Input
                      id="guests"
                      type="number"
                      min="1"
                      max="5"
                      value={guestForm.guests}
                      onChange={(e) => handleInputChange('guests', e.target.value)}
                    />
                  </div>

                  <div className={styles.formGroup}>
                    <Label htmlFor="dietary">–û—Å–æ–±–ª–∏–≤–æ—Å—Ç—ñ —Ö–∞—Ä—á—É–≤–∞–Ω–Ω—è</Label>
                    <Input
                      id="dietary"
                      placeholder="–í–µ–≥–µ—Ç–∞—Ä—ñ–∞–Ω—Å—Ç–≤–æ, –∞–ª–µ—Ä–≥—ñ—ó —Ç–æ—â–æ"
                      value={guestForm.dietary}
                      onChange={(e) => handleInputChange('dietary', e.target.value)}
                    />
                  </div>
                </>
              )}

              <div className={styles.formGroup}>
                <Label htmlFor="message">–ü–æ–±–∞–∂–∞–Ω–Ω—è –º–æ–ª–æ–¥—è—Ç–∞–º</Label>
                <Textarea
                  id="message"
                  placeholder="–í–∞—à—ñ —Ç–µ–ø–ª—ñ –ø–æ–±–∞–∂–∞–Ω–Ω—è..."
                  value={guestForm.message}
                  onChange={(e) => handleInputChange('message', e.target.value)}
                />
              </div>

              <Button type="submit" className={styles.submitButton}>
                –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –ø—Ä–∏—Å—É—Ç–Ω—ñ—Å—Ç—å
              </Button>
            </form>
          </CardContent>
        </Card>
      </section>

      {/* Footer */}
      <footer className={styles.footer}>
        <p>–ó –ª—é–±–æ–≤'—é, –û–ª–µ–∫—Å–∞–Ω–¥—Ä —ñ –ú–∞—Ä—ñ—è üíï</p>
        <div className={styles.ornament}>üåª üíô üíõ üåª</div>
      </footer>
    </div>
  );
};

export default Wedding;